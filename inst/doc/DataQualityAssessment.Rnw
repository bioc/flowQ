% NOTE -- ONLY EDIT THE .Rnw FILE!!!  The .tex file is
% likely to be overwritten.
%
%\VignetteIndexEntry{Data Quality Assesment for Ungated Flow Cytometry Data}
%\VignetteDepends{flowViz}
%\VignetteKeywords{}
%\VignettePackage{flowViz}
\documentclass[11pt]{article}

\usepackage{times}
\usepackage{hyperref}
\usepackage[authoryear,round]{natbib}
\usepackage{times}
\usepackage{comment}
\usepackage{graphicx}
\usepackage{subfigure}
\usepackage{amsmath}

\textwidth=6.2in
\textheight=8.5in
\oddsidemargin=.1in
\evensidemargin=.1in
\headheight=-.3in

\newcommand{\scscst}{\scriptscriptstyle}
\newcommand{\scst}{\scriptstyle}
\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Rcode}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textsf{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}
\newcommand{\Rfunarg}[1]{{\texttt{#1}}}
\newcommand{\code}[1]{{\texttt{#1}}}


\title{Quality Assessment of Ungated High Throughput Flow Cytometry Data-using
the flowQ package}
\author{N. Gopalakrishnan, F. Hahne}

\begin{document}
\maketitle

\section{Introduction}

The  advent of high throughput methods has resulted in a large increase in the 
amount of data available from cytometry experiments. This large amount of 
information needs to be summarized and presented in a visually appealing manner
so that the researcher can draw appropriate inferences from the data.

Quality assessment is an important step in the data analysis pipeline
often helping researchers identify differences in samples originating from
conditions that are probably not of biological origin. A quality control criterion
can then be established to give special consideration to these samples or even 
exclude them from further analysis.

In a typical flow cytometry experiment, samples from patients are often divided 
into several aliquots. The aliquots are then stained  with specific stains that 
are selective to antibodies presented by the cell surface. The basis for the quality
control procedure is that cell specific parameters like Forward and Side Scatter 
which are dependent on the cell size and the granularity of the cell respectively
should present similar results across aliquots. Additionally, certain fluorescent 
dyes utilized in the staining procedure may be replicated in some of the aliquots. 
Flourescence intensities recorded from such dyes are also expected to be similar
across aliquots. 

Several one and two dimensional methods have been presented  in the flowQ package
that helps users perform quality analysis. The package also provides infrastructure
to generate interactive quality reports based on a unified HTML output.


\section{Data Quality Analysis using the flowQ package}

Our data set involves samples collected from 4 individuals which were then 
split into 8 aliquots.Each aliquot was then stained with a different combination 
of stains as shown in the figure below.


\begin{figure}{}
\begin{center}
\includegraphics[width=0.6\textwidth]{stainInfo.pdf}
\caption{Fluorescence dyes used in the experiment}
\end{center}
\end{figure}


\subsection{Data preprocessing and transformation}

<<loadPackage, echo=false,results=hide>>=
library(flowQ)
library(RColorBrewer)
library(latticeExtra)
@

The first step in the data analysis pipeline involves reading in the cytometry 
data which can be achieved using the \Rfunction{read.FCS} function for FCS files 
or using the \Rfunction{load} function for flow cytometry data that was saved from 
a previous R workspace. In our example, the data file qData.rda resides in the 
data folder of the flowQ package and can be loaded with the \Rfunction{data} command.

<<Read_Transform,echo=true,results=verbatim>>=
data(qData)
qData[[1]][[1]]
@

The data read into an R session is a \Rclass{list} containing  8 \Rclass{flowSets}, 
each \Rclass{flowSet} corresponding to an aliquot. Each \Rclass{flowSets} contains 
data from four patients. 

The description field off each flowSet contains information regarding the stains
used for each sample. In data sets that do not contain the stain information, the
description field of each \Rclass{flowFrame} needs to be updated with the corresponding
stain information. Description fields for parameters like forward/side scatter and 
Time are to be filled with NA.( The methods \Rfunction{pData} and \Rfunction{parameters}
can be used to update the description field)

The parameters need to be first needs to be transformed for better visualization
of the data. For the dataset, all flow parameters except forware and side scatter 
were transformed using the \Rfunction{asinh} transformation.

<<transformData, echo=true,results=hide>>=
tData<-list()
for(i in seq_len(length(qData))){
    wfNew <- workFlow(qData[[i]], name="panel")
    tf <- transformList(colnames(Data(wfNew[["base view"]]))[3:7], asinh,transformationId="asinh")
    add(wfNew, tf)
    tData[[i]] <- Data(wfNew[["asinh"]])
    rm(wfNew)
}
@

A pair wise plot of all parameters for the first \Rclass{flowSet} is shown below

<<Plot1_TransformedData, fig=true, echo=true,eval=TRUE>>=
library(flowViz)
plot(tData[[1]][[1]])
@

\subsection{QA process for boundary values}

A large number of boundary values could possibly cause problems during the data 
analysis stage. Since the QA procedure compares the flow parameters for each patient
across the eight aliquots, we have to ensure that the percentage of boundary events
is not significantly high enough to cause issues with the QA process, especially for  1D 
QA processes which involve estimating the density and KL distances or when 2D summary 
statistics such as the mean is computed.

The \Rfunction{qaProcess.BoundaryPlot} allows the user to quickly visualize the 
percentage of boundary events for each patient in the data set. The output generated
from the function can be written to an html report using the \Rfunction{writeQAReport}.

The percentage of boundary events for "FSC-A" and "CD3" that exceed a set cutoff 
of 3% can be visualized using the \Rfunction{qaProcess.BoundaryPlot} function 
as shown below. 

<<displayBoundaryData,echo=true,results=hide>>=
resBoundary <- qaProcess.BoundaryPlot(tData,dyes=c("FSC-A","CD3"),outdir="myDir",cutoff=3,pdf=TRUE)
imagePath<-resBoundary@summaryGraph@fileNames[1]
#writeQAReport(tData[[1]], list(resBoundary), outdir="myDir",pdf=TRUE)
@

The percentage of boundary events for "FSC-A" and "CD3" are shown in the figure 
below. Each panel in the figure represents data from a patient with each horizontal bar 
indicating the percentage of boundary events for an aliquot. The horizontal bars 
for aliquots whose boundary  events exceed our setcutoff value of 3% are colored red.

<<displayBoundImage,echo=false,results=tex>>=
 cat('\\includegraphics[width=1.0\\textwidth]{', imagePath, '}\n', sep="")
@

Clearly the data could benefit some filtering of the boundary events. We proceed
to create a boundary filter to remove the boundary events from our dataset.

A boundary filter can be used to remove events at the boundaries 
for each channel.The data after excluding the boundary events is stored as 
a \Rclass{list} of \Rclass{flowSet}s 

<<BoundaryEvents, echo=true,results=hide>>=

createBoundaryFilterList<-function(flowSet){
    len <- length(colnames(flowSet))
    tmp<-fsApply(flowSet,range)
    tmp<-lapply(tmp,function(x){
        x[[colnames(x)[len]]]<-NULL
        x
    })
    res<-lapply(tmp,function(y){
        apply(y,2,function(x){
        # 2*x-extendrange(r=x,0.1)
          c((x[1]+2*.Machine$double.eps),(x[2]-2*.Machine$double.eps))
        })
    
    })
    filtList<-lapply(res,function(x){
            rectangleGate(filterId="boundary",.gate=x)
    }		)	
    return(filtList)
}

boundData<-list()
for(i in seq_len(length(tData))){
    wfNew <- workFlow(tData[[i]], name="panel")
    filtList<-createBoundaryFilterList(Data(wfNew[["base view"]]))
    flt<-filterList(x=filtList,filterId="boundary")
    add(wfNew,flt)
    boundData[[i]] <- Data(wfNew[["boundary+"]])
    rm(wfNew)
    cat(i)
    cat(".")
}
@

\subsection{Data normalization}

When data from different aliquots are compared, shifts in floursecence intensities
can be observed for the same fluorescence dye. Biologically there should have 
been no differences as the cell types came from a single sample from the patient..
These shifts need to be corrected for before proceeding with any gating.Additionally,
the QA processes for density,ECDF plots etc relies on the distance between
the plots from the same patient to identify patient panels that are potential
outliers. Proper alignment of data from different aliquots is necessary and can be 
done using the \Rfunction{warpSet} function. The function normalizes data 
based on landmarks estimated from high density regions in the data.

The parameters that are duplicated across the aliquots for each patient can be 
identified using the \Rfunction{locateDuplicatedParameters}. For each patient,
the data obtained from floursecence dyes CD8, CD27 and CD4 for each of the eight 
aliquots are normalized so that the peaks in flow parameters for each patient
aligns up between aliquots.

<<Data Normalization, echo=true,results=hide>>=
  library(flowStats)
  patientID=sampleNames(boundData[[1]])
  ls <- length(patientID)
  #dupes <- locateDuplicatedParameters(boundData)
  #nData<-normalizeSets(flowList=boundData,dupes=dupes[-c(1,2)]) ## ignoring FSC-A, SSC-A
  nData<-normalizeSets(flowList=boundData,dupes=c("CD8","CD27","CD4"))
@

\subsection{ECDF plots}

Emperical cumulative distribution function gives the probability that a randomly 
picked sample is less than or equal to its value. ECDF plots can easily reveal 
differences in the distribution of the flow cytometry parameters although they 
do not reveal much information regarding the underlying shape of the distribution.

The \Rfunction{qaProcess.ECDFPlot} produces ECDF plots of the flow cytometry 
parameters. The ECDF plots are grouped by patient so that data from the eight 
aliquots for each patient appear together in one plot, thereby allowing direct
comparison of any differences in their distribution.The cytometer channels from
which the data was obtained are also displayed in the legend.

To identify patient panels that have higher variation amongst the ECDF plots,
sample quantiles were estimated along 256 points. Pairwise KL distances were 
then estimated for each patient and them summed to yield a single distance measure for 
each patient. The sum was then normalized by the maximum value of the sum of the 
KL distances obtained during the QA process for better comparison of the magnitude 
of differences. Univariate outlier detection was performed on the normalized 
distance values to identify patient panels where ecdf plots are different from 
each other.

<<getDistances,echo=false,results=hide>>=
getDistance<-function(res,dyes){
len<-length(res@frameProcesses)
result<-data.frame()
for( j in seq_len(length(dyes))){

    for (i in seq_len(len)){
    
        patName<-res@frameProcesses[[i]]@frameID
        dist   <-res@frameProcesses[[i]]@frameAggregators@.Data[[j]]@x
        passed <-res@frameProcesses[[i]]@frameAggregators@.Data[[j]]@passed
        tempRes<-data.frame(Patient=patName,Parameter=dyes[j],Passed=passed,
                  Distance=dist,check.names=F)   
    	result<-rbind(result,tempRes)
}
}
return(result)
}
@


<<ECDF plots 1, echo=true>>=
dyes<- c("FSC-A","SSC-A")
resFSCECDF <- qaProcess.ECDFPlot(nData,dyes=dyes,outdir="myDir",alpha=0.4,pdf=TRUE)
#ecdfUrl<-writeQAReport(nData[[1]], list(resFSCECDF), outdir="myDir",pdf=TRUE)
#browseURL(ecdfUrl)

@

<<genTblECDF,echo=false>>=
imagePath<-resFSCECDF@summaryGraph@fileNames[1]
getDistance(resFSCECDF,dyes)
@

ECDF plots for forward and side scatter is shown below.

<<produceFSCECDFimage,echo=false,results=tex>>=
 cat('\\includegraphics[width=1.0\\textwidth]{', imagePath, '}\n', sep="")
@

<<ECDF plots 2, echo=true,results=hide>>=
resCD8ECDF <- qaProcess.ECDFPlot(nData,dyes=c("CD8","CD27"),outdir="myDir",alpha=0.4,pdf=TRUE)
@

<<genTblECDF2,echo=false>>=
imagePath<-resCD8ECDF@summaryGraph@fileNames[1]
getDistance(resCD8ECDF,c("CD8","CD27"))

@

ECDF plots for dyes CD8 and CD27 are shown below

<<produceCD8ECDFimage,echo=false,results=tex>>=
 cat('\\includegraphics[width=1.0\\textwidth]{', imagePath, '}\n', sep="")
@

Each line in the ECDF plot for a patient is plotted in a different color corresponding
to the aliquot from which the sample was selected. The distance between the ECDF 
lines for each patient indicates how different the data from each aliquots are.
If the flourescence parameters are similar across the aliquots the ECDF lines would 
be close together(example FSC-A for "pid01027").If the aliquot intensities were different,
then the ECDF plots for the aliquots would diverge out.(example SSC-A for "pid02050")

The legend on the right corner of each plot also contains information regarding 
the channel from which the fluorescence intensities were recorded. If a particular
dye is absent from an aliquot, the corresponding legend name entry for channel 
information is left empty. 

From the ECDF plots it appears that the forward/side scatter as well as the CD8
intensities for patient "pid02050" appears to be different from the rest of the group 
indicating some problem with the experimental or data collection procedure.However,
the intensity for dye CD27 for patient "pid02050" appears similar to the rest of
the group. These results are also confirmed by higher distance measures calculated 
for patient "pid02050" for parameter SSC-A, FSC-A and CD8. A larger number for the 
distance measure indicates a greater difference between the flourescence intensities
from the aliquots. 

\subsection{Density plots}

Density plots reveal useful information regarding the underlying shape of the 
distribution. They describe the probability of a variable being at a specific 
value.

Density plots can be produced by the \Rfunction{qaProcess.DensityPlot} function.
Each panel in the plot produced represents data from a patient. The density data 
for parameters from  each aliquot are represented in a different color. 
Additionally, the channels from which they were acquired are shown in the legend.

For each patient, density values were estimated along 256 equidistant points along
the range of each floursence parameter. For the density values from each patient,
pairwise KL distances between the density data from the aliquots were then computed.
The sum of the pairwise distances for each patient was then normalized to the maximum
value of the sum that was calculated in the data set to yield a number between 0 
and 1. Univariate outlier detection was performed on the normalized 
distance values to identify patient panels where density plots are different from 
the rest of the group.

Density plot for forward/side scatter can be generated by passing these arguments 
to the dyes input of the \Rfunction{qaProcess.densityPlot}

<<Density plots 1, echo=true,results=hide>>=
resDensityFSC <- qaProcess.DensityPlot(nData,dyes=c("FSC-A","SSC-A"),outdir="myDir",alpha=0.2,pdf=TRUE)
#densityUrl<-writeQAReport(nData[[1]], list(resDensity), outdir="myDir")
#browseURL(densityUrl)
@

<<genTblDens1,echo=false>>=
imagePath<-resDensityFSC@summaryGraph@fileNames[1]
getDistance(resDensityFSC,c("FSC-A","SSC-A"))
@

The density plots for forward/side scatter are show below.

<<produceDensityFSC,echo=false,results=tex>>=
 cat('\\includegraphics[width=1.0\\textwidth]{', imagePath, '}\n', sep="")
@


<<Density plots 2, echo=true,results=hide>>=
resDensityCD8 <- qaProcess.DensityPlot(nData,dyes=c("CD8","CD27"),outdir="myDir",alpha=0.2,pdf=TRUE)
@


<<genTbl2Dens,echo=false<<=
imagePath<-resDensityCD8@summaryGraph@fileNames[1]
getDistance(resDensityCD8,c("CD8","CD27"))
@

The density plots for dyes CD8 and CD27 are show below.

<<produceDensityCD27,echo=false,results=tex>>=
 cat('\\includegraphics[width=1.0\\textwidth]{', imagePath, '}\n', sep="")
@

As with the ECDF plots, the closer the density plot lines are for a particular
patient, the smaller the difference is between the aliquots. From the FSC/SSC 
density plots, the density lines appears to be most further apart for patient 
"pid02050". For patient "pid02050" clearly distinct bimodal distribution is observed
from the FSC-A density plot while the other patients have a unimodal distribution
The calculated distance measure was also found to be highest in patient "pid02050"
for parameter FSC-A.

A difference in the shape of the distribution for patient "pid02050"
can also be observed from the CD8 density plot. This result can also be observed 
in the calculated distance measures for parameter CD8

While the FSC-A, SSC-A and CD8 plots for patient "pid02050 appear to be significantly
different from the rest of the group,  the density plots for CD27 look very similar
for all the patients as indicated by the close overlap of the density lines.
Another observation from  stain CD8 is that the two density plot lines 
for channel FITC-A lines up together and appears to be different from that 
for FL3-A channel even though they represent intensities from the same dye. Perhaps 
this could be caused by lack of proper compensation for spectral overlap. 

The legend for the plot indicates the channel from which the intensities were 
recorded as well as the aliquot from which the sample was obtained. For stains
that are absent from an aliquot, the corresponding channel is left empty in the 
legend.

\subsection{2D Summary statistics}

Two dimensional summaries often provide additional information not available 
in single dimensional approaches such as the density plot as they display information
regarding the consolidated distribution of parameters.Parameters pairs such as 
forward and sideward scatter occur in measurements from all the aliquots.

Statistical measures such as the mean, median etc can be calculated for each 
parameter and can be represented in the form of a scatter plot for each patient.
The summary statistic of the flourescence parameter pair from each aliquot represents
a point in the scatter plot panel of each patient.

The \Rfunction{2DStatsPlot} generates scatter plots of summary statistics of 
fluorescence parameter pairs occurring in each aliquot. Any parameter pairs in an
aliquot that occur in more than once in the \Rclass{list} of \Rclass{flowSets}
can be passed as input to this function.

Two dimensional outlier detection is performed on the scatter plot panels for 
each patient to identify aliquots with the summary statistic measure different
from the rest. The summary plot on the top of the HTML report shows the an overview
of the selected summary statistic measure for each patient. The outliers are displayed
in red. 

The scatter plot for each parameter pair can also be observed in horizontal
panels for each patient. For each detailed patient panel,the fluorescence channel 
from which the parameter was recorded as well as the aliquot number are displayed 
in the legend. The outlier aliquots are marked with a red dot.

The mean flourescence intensities for a pair wise combination of parameter  values
of "FSC-A","SSC-A","CD4" and "CD8" can be generated by passing them
as input to the \Rfunction{qaProcess.2DStatsPlot}

<<2DSummary_mean, echo=true,results=hide>>=
par<-c("FSC-A","SSC-A","CD4","CD8")
resMean <- qaProcess.2DStatsPlot(nData,dyes=par,outdir="myDir",func=mean,
outBound=0.28,pdf=TRUE)
imagePath <- resMean@summaryGraph@fileNames[1]
#summaryUrl<-writeQAReport(nData[[1]], list(resMean), outdir="myDir",pdf=TRUE)
#browseURL(summaryUrl)

@

The scatter plot of mean FSC/SSC and CD4/CD8  value pairs are shown
in the figure below. 

<<2Dsummaryplot_mean,echo=false,results=tex>>=
 cat('\\includegraphics[width=1.0\\textwidth]{', imagePath, '}\n', sep="")
@

<<2DSummary_median, echo=true,results=hide>>=
par<-c("FSC-A","SSC-A","CD4","CD8")
resMedian <- qaProcess.2DStatsPlot(nData,dyes=par,outdir="myDir",func=median,
outBound=0.28,pdf=TRUE)
imagePath <- resMedian@summaryGraph@fileNames[1]
#summaryUrl<-writeQAReport(nData[[1]], list(resMedian), outdir="myDir",pdf=TRUE)
#browseURL(summaryUrl)
@

The scatter plot of median FSC/SSC and CD4/CD8  value pairs are shown
in the figure below. 

<<2Dsummaryplot_median,echo=false,results=tex>>=
 cat('\\includegraphics[width=1.0\\textwidth]{', imagePath, '}\n', sep="")
@

For the mean and median summary plots from each patient, if the data from the 
eight aliquots were similar, we would expect the dots to cluster together. We 
expect an aliquot with an experimental artifact to be spread out from the 
rest of the group. These outliers can then be identified by two dimensional 
outlier detection method. Outliers in the plot are marked in red color.

From the mean and  median summary plots for FSC-A/SSC-A, patient "pid02050" seems 
to have data most scattered, indicating differences between the aliquots from 
which the parameters were recorded. Data from outlier aliquots most distant 
from the rest of the points for each patient is shown in red. The outlier aliquot
was well as the channel from which it was acquired can be identified by going into
the detailed patient panel information presented in the HTML report generated by
the \Rfunction{writeQAReport}

\subsection{Kullback-Leibler distance plots}

The Kullback-Leibler Information between densities f1 and f2 is defined as 

\begin{equation}
\label{eq:test} 
\ KLI=\int \frac{f_{1}(x)}{f_{2}(x)}f_{2}(x) dx
\end{equation}

Density estimation followed by numerical integration can be used to calculate the 
pairwise KL distance between the parameters values for each aliquot to identify 
patient panels that are potentially different from the rest. However such an 
approach may be computationally intensive, especially for flow 
cytometry data.

An alternative approach is to bin the floursence data to obtain an estimate of
density. The estimated density values can then be used to compute pair wise KL 
distances for the aliquots from which data was obtained.The aliquots which were not 
stained for a particular parameter are labelled as missing.

For each patient , the pair wise KL distances can then be visualized by a plot 
with a color scale representing the value for the distance matrix. Aliquots that
are very similar to each other will have a lower color intensity on the color
scale. 

The KLDistance plot can be generated using the function  \Rfunction{qaProcess.KLDistPlot}

<<KL Distance plots, echo=true,results=hide>>=
resKLdist <- qaProcess.KLDistPlot(nData,dyes=c("SSC-A","CD8"),outdir="myDir",alpha=0.05,pdf=TRUE)
writeQAReport(nData[[1]], list(resKLdist), outdir="myDir")
imagePath <- resKLdist@summaryGraph@fileNames[1]
#browseURL(klDistURL)
@

The KL Distance for the aliquots for parameters "SSC-"A and "CD8" are  shown below.
<<KLDistanceplot,echo=false,results=tex>>=
 cat('\\includegraphics[width=1.0\\textwidth]{', imagePath, '}\n', sep="")
@


When KL distance plots from several patients are plotted side by side with the same 
intensity axis for the color, we can draw conclusions regarding which which patient 
panel has aliquots most similar to each other as well as which patient exhibited
the largest difference in aliquots. For the SSC-A plot above it is clear that 
patient "pid02057" has the least color intensity and "pid02050" has the highest
intensity. From the CD8 plot, it is very clear that patient "pid02050" has higher 
color intensities and is different from the rest of the group.These result are 
consistent with what has been observed in the ECDF plots for these parameters
discussed earlier.


KL distance plots are more useful in identifying differences between aliquots 
within a patient. From the CD8 dye plot for patient "pid02050", the highest intensities
occur for comparisons between aliquot pairs (1,6) , (1,2) and (5,6) and (5,2).
It is intersting to note that dyes 1 and 5 were obtained from the FL3-A channel
while aliquots 2,6 were obtained from the FITC-A channel. These difference in
patient "pid02050" are more evident when the KL distance plots are viewed
simultaneously with the ECDF plots for this particular patient. 

\subsection{Conclusions}

The visualization techniques presented in this package provide different views of the 
underlying statistical properties of the data. A combination of the visualization 
techniques could help the user identify deviant samples. The visualization tools 
provided by the flowQ package could potentially help identify samples differences
that are probably not biologically motivated and hence could be further 
investigated before spending time and resources for gating and detailed analysis.
  

%\clearpage
%\bibliographystyle{plainnat} 
%\bibliography{cytoref}
\end{document}
